・概要
サーバの監視ログファイルの解析を行うプログラムとテストデータ、実行結果

・設定
サーバに対して一定間隔でping応答確認をしたログファイルに対して解析を行う。
確認結果は以下のように記入される
＜確認日時＞,＜サーバアドレス＞,＜応答結果＞
確認日時は、YYYYMMDDhhmmssの形式。ただし、年＝YYYY（4桁の数字）、月＝MM（2桁の数字。以下同様）、日＝DD、時＝hh、分＝mm、秒＝ssである。
サーバアドレスは、ネットワークプレフィックス長付きのIPv4アドレスである。
応答結果には、pingの応答時間がミリ秒単位で記載される。ただし、タイムアウトした場合は"-"(ハイフン記号)となる。

・内容
FixpointTest1.py:監視ログファイルを読み込み、故障状態のサーバアドレスとそのサーバの故障期間を出力するプログラム。
(pingがタイムアウトした場合を故障とみなし、最初にタイムアウトしたときから、次にpingの応答が返るまでを故障期間とする。)
FixpointTest2.py:N回以上連続してタイムアウトした場合にのみ故障とみなすようにFixpointTest1.pyを拡張したもの。
FixpointTest3.py:直近m回の平均応答時間がtミリ秒を超えた場合は、サーバが過負荷状態になっているとみなし、
各サーバの過負荷状態となっている期間を出力できるようにFixpointTest2.pyを拡張したもの。
FixpointTest4.py:サブネット内のサーバが全て故障（ping応答がすべてN回以上連続でタイムアウト）している場合はそのサブネットの故障とみなし、
各サブネット毎にネットワークの故障期間を出力できるようにFixpointTest2.pyを拡張したもの。
log1:FixpointTest1.pyのテストを行うためのログファイル。
log2:FixpointTest2.pyのテストを行うためのログファイル。
log3:FixpointTest3.pyのテストを行うためのログファイル。
log4:FixpointTest4.pyのテストを行うためのログファイル。
result:各プログラムの実行結果をまとめたファイル。
ProgramDescription.docx:プログラムの内容、実行方法、結果をまとめたファイル。

・必要ライブラリ
itertools
datetime
ipaddress

・実行方法
プログラムとテスト用ログファイルを同じフォルダに格納して実行